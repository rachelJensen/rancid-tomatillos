{"version":3,"sources":["components/Header/Header.js","components/MoviePoster/MoviePoster.js","components/Error404/Error404.js","components/MoviesContainer/MoviesContainer.js","Utils.js","apiCalls.js","components/MovieDetailer/MovieDetailer.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","to","MoviePoster","id","poster","title","className","src","alt","Error404","errorType","line1","line2","MoviesContainer","movies","loadingError","movieCards","map","movie","poster_path","backdrop","backdrop_path","rating","average_rating","release","release_date","formatMovieDetails","data","genres","join","toFixed","split","shift","revenue","budget","runtime","fetchData","endpoint","formatEndpoint","fetch","then","res","ok","json","Promise","reject","status","MovieDetailer","componentDidMount","props","setState","catch","err","error","video","videos","console","log","render","NaN","state","tagline","overview","url","key","width","height","Component","App","exact","path","match","parseInt","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7acc5475.chunk.js","sourcesContent":["import './Header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header >\n      <Link to='/'>\n       <h1>Rancid Tomatillos</h1>\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import './MoviePoster.css';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n\nconst MoviePoster = ({ id, poster, title }) => {\n  return (\n    <Link to={`movies/${id}`}>\n      <article id={id}>\n        <img className=\"poster\" src={poster} alt={title} />\n      </article>\n    </Link>\n  );\n};\n\nexport default MoviePoster;\n\nMoviePoster.propTypes = { \n  id: PropTypes.number,\n  poster: PropTypes.string,\n  title: PropTypes.string\n}","import './Error404.css';\nimport {Link} from 'react-router-dom';\n\nconst Error404 = ({ errorType }) => { \n  let line1 = (errorType === 'error 404') ? '404' : 'Something went wrong';\n  let line2 = (errorType === 'error 404') ? 'Page Not Found' : 'Please try again later'\n  \n  return (\n      <Link to=\"*\" >\n        <section className=\"error\">\n          <div className=\"error-message\">\n            <h2 className='neon-error'>{line1}</h2>\n            <h3 className='neon-error'>{line2}</h3>\n          </div>\n        </section>\n      </Link>\n  )\n}\n\nexport default Error404;","import './MoviesContainer.css';\nimport MoviePoster from '../MoviePoster/MoviePoster';\nimport Error404 from '../Error404/Error404';\nimport PropTypes from 'prop-types';\n\nconst MoviesContainer = ({ movies, loadingError}) => {\n  const movieCards = movies.map((movie) => {\n    return (\n      <MoviePoster\n        id={movie.id}\n        poster={movie.poster_path}\n        backdrop={movie.backdrop_path}\n        title={movie.title}\n        rating={movie.average_rating}\n        release={movie.release_date}\n        key={movie.id}\n      />\n    );\n  });\n\n  return (\n    (!loadingError) ?\n    <div className=\"background\">\n      <section className=\"container\">\n        {movieCards}\n      </section>\n    </div>\n    : <Error404 errorType={loadingError}/>\n  )\n};\n\nexport default MoviesContainer;\n\nMoviesContainer.propTypes = { \n  movies: PropTypes.array,\n  loadingError: PropTypes.string\n}","export const formatMovieDetails = (data) => {\n  data.genres = data.genres.join(', ')\n  data.average_rating = data.average_rating.toFixed(1)\n  data.release_date = data.release_date.split('-').shift();\n  data.revenue = data.revenue  ? `Revenue: $${data.revenue}` : ''\n  data.budget = data.budget  ? `Budget: $${data.budget}` : ''\n  data.genres = data.genres  ? `Genre(s): ${data.genres}` : ''\n  data.runtime = data.runtime  ? `Runtime: ${data.runtime} min` : ''\n  return data\n}","import { formatMovieDetails } from \"./Utils\"\nconst url = \"https://rancid-tomatillos.herokuapp.com/api/v2/movies/\"\n\nexport const fetchData = (endpoint) => {\n  let formatEndpoint = endpoint ? endpoint : ''\n\n  return fetch(`${url}${formatEndpoint}`)\n  .then(res => {\n    if(res.ok) {\n      return res.json()\n    } else {\n      return Promise.reject(`error ${res.status}`)\n    }\n  })\n}\n","import './MovieDetailer.css';\nimport React, { Component } from 'react';\nimport { fetchData } from '../../apiCalls';\nimport { formatMovieDetails } from '../../Utils';\nimport ReactPlayer from 'react-player/youtube';\nimport Error404 from '../Error404/Error404';\n\nclass MovieDetailer extends Component { \n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      video: [],\n      error: '',\n    }\n  }\n\n  componentDidMount = () => {\n    fetchData(this.props.id)\n      .then(data => this.setState({ movie: formatMovieDetails(data.movie)}))\n      .catch(err => this.setState({ error: err }))\n    fetchData(`${this.props.id}/videos`)\n      .then(data => this.setState({ video: data.videos}))\n      .catch(err => console.log(err))\n  }\n\n \n  render = () => {\n    if (this.props.id === NaN || this.state.error) {\n      return  <Error404 errorType={this.state.error} />\n    }\n\n    return (\n      <section className='movie-info'>\n        <img className='backdrop' src={this.state.movie.backdrop_path} alt={this.state.movie.title}/>\n        <div className='details-container'>\n          <div className='details-box'>\n            <h2>{this.state.movie.title}</h2>\n            <p className='tagline'>{this.state.movie.tagline}</p>\n            <p className='genres'>{this.state.movie.genres}</p>\n            <p className='release'>{this.state.movie.release_date}</p>\n            <p className='overview'>{this.state.movie.overview}</p>\n            <p className='rating'>Average Rating {this.state.movie.average_rating}</p>\n            <p className='budget'>{this.state.movie.budget}</p>\n            <p className='revenue'>{this.state.movie.revenue}</p>\n            <p className='runtime'>{this.state.movie.runtime}</p>\n          </div> \n          {this.state.video[0] && \n          <div className='video-wrapper'>\n            <ReactPlayer \n              className='react-player'\n              url={`https://www.youtube.com/watch?v=${this.state.video[0].key}`}\n              width='100%'\n              height='100%' />\n          </div>}\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default MovieDetailer;","import './App.css';\nimport React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport MovieDetailer from '../MovieDetailer/MovieDetailer';\nimport Error404 from '../Error404/Error404';\nimport { fetchData } from '../../apiCalls';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      loadingError: ''\n    };\n  }\n\n  componentDidMount = () => {\n    fetchData()\n      .then(data => this.setState({ movies: data.movies}))\n      .catch(err => {\n        this.setState({ loadingError: err })\n      })\n    }\n    \n  render() {\n    return (\n      <main className=\"main\">\n        <Header  /> \n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/movies\" />\n          </Route>\n          <Route exact path='/movies' render={() => \n            <MoviesContainer movies={this.state.movies} loadingError={this.state.loadingError}/>} />\n          <Route exact path='/movies/:id' render={({ match }) => \n            <MovieDetailer id={parseInt(match.params.id)}/> }/>\n          <Route path='*' render={() => \n            <Error404 errorType={'error 404'}/>} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}